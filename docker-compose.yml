services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "3000:3000"
    networks:
      - database.network
      - broker.network
    env_file:
      - conf/.env
    volumes:
      - ./certs:/app/certs
    profiles:
      - main

  generate-certs:
    image: cockroachdb/cockroach
    container_name: generate-certs
    entrypoint: [ "/bin/bash", "-c" ]
    command: |
      "bash /database.sh"
    volumes:
      - ./certs:/certs
      - ./scripts/database.sh:/database.sh
    environment:
      COCKROACH_SKIP_KEY_PERMISSION_CHECK: true
    networks:
      - database.network
    profiles:
      - setup

  cockroachdb1:
    image: cockroachdb/cockroach
    container_name: cockroachdb1
    command: start --certs-dir=/cockroach/certs --advertise-addr=cockroachdb1 --join=cockroachdb1,cockroachdb2,cockroachdb3
    networks:
      - database.network
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "cockroach", "sql", "--certs-dir=/cockroach/certs", "--host=localhost:26257", "--execute", "SELECT 1" ]
      interval: 5s
      timeout: 2s
      retries: 5
    depends_on:
      generate-certs:
        condition: service_completed_successfully
    environment:
      COCKROACH_SKIP_KEY_PERMISSION_CHECK: true
    volumes:
      - cockroach1.data:/cockroach/cockroach-data
      - ./certs:/cockroach/certs
    profiles:
      - setup

  cockroachdb2:
    image: cockroachdb/cockroach
    container_name: cockroachdb2
    command: start --certs-dir=/cockroach/certs --advertise-addr=cockroachdb2 --join=cockroachdb1,cockroachdb2,cockroachdb3
    networks:
      - database.network
    ports:
      - "26258:26257"
      - "8081:8080"
    depends_on:
      generate-certs:
        condition: service_completed_successfully
    environment:
      COCKROACH_SKIP_KEY_PERMISSION_CHECK: true
    volumes:
      - cockroach2.data:/cockroach/cockroach-data
      - ./certs:/cockroach/certs
    profiles:
      - setup

  cockroachdb3:
    image: cockroachdb/cockroach
    container_name: cockroachdb3
    command: start --certs-dir=/cockroach/certs --advertise-addr=cockroachdb3 --join=cockroachdb1,cockroachdb2,cockroachdb3
    networks:
      - database.network
    ports:
      - "26259:26257"
      - "8082:8080"
    depends_on:
      generate-certs:
        condition: service_completed_successfully
    environment:
      COCKROACH_SKIP_KEY_PERMISSION_CHECK: true
    volumes:
      - cockroach3.data:/cockroach/cockroach-data
      - ./certs:/cockroach/certs
    profiles:
      - setup

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - broker.network
    env_file:
      - conf/.env
    volumes:
      - rabbitmq.data:/var/lib/rabbitmq
    profiles:
      - setup

networks:
  database.network:
    driver: bridge
  broker.network:
    driver: bridge

volumes:
  cockroach1.data:
  cockroach2.data:
  cockroach3.data:
  rabbitmq.data:
