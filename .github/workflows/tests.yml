name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      COCKROACH_USER: postgres
      COCKROACH_PASSWORD: postgres
      COCKROACH_DATABASE: database
      DB_PORT: 5432
      DB_HOST: localhost
      MQ_HOST: localhost
      MQ_PORT: 5672
      CACHE_URL: memcached:11211
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      TEST: true

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: database
        ports: [ '5432:5432' ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      rabbit:
        image: rabbitmq
        ports:
          - "5672:5672"
          - "15672:15672"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.3'

      - name: Install dependencies
        run: go mod tidy

      - name: Run migrations
        env:
          PGPASSWORD: postgres
        run: |
          for file in migrations/*.sql; do
            echo "Running migration: $file"
            psql -h localhost -p 5432 -U postgres -d database -f "$file"
          done

      - name: Run tests
        run: go test -v ./internal/... -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}